#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLDACNTT_QUANLYKHO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKHO")]
	public partial class DataDemoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBOPHAN(BOPHAN instance);
    partial void UpdateBOPHAN(BOPHAN instance);
    partial void DeleteBOPHAN(BOPHAN instance);
    partial void InsertKHO(KHO instance);
    partial void UpdateKHO(KHO instance);
    partial void DeleteKHO(KHO instance);
    partial void InsertKIEMKE(KIEMKE instance);
    partial void UpdateKIEMKE(KIEMKE instance);
    partial void DeleteKIEMKE(KIEMKE instance);
    partial void InsertNHANSU(NHANSU instance);
    partial void UpdateNHANSU(NHANSU instance);
    partial void DeleteNHANSU(NHANSU instance);
    partial void InsertNHAPKHO(NHAPKHO instance);
    partial void UpdateNHAPKHO(NHAPKHO instance);
    partial void DeleteNHAPKHO(NHAPKHO instance);
    partial void InsertPROVIDER(PROVIDER instance);
    partial void UpdatePROVIDER(PROVIDER instance);
    partial void DeletePROVIDER(PROVIDER instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertXUATKHO(XUATKHO instance);
    partial void UpdateXUATKHO(XUATKHO instance);
    partial void DeleteXUATKHO(XUATKHO instance);
    #endregion
		
		public DataDemoDataContext() : 
				base(global::QLDACNTT_QUANLYKHO.Properties.Settings.Default.QLKHO_ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDemoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDemoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDemoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDemoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BOPHAN> BOPHANs
		{
			get
			{
				return this.GetTable<BOPHAN>();
			}
		}
		
		public System.Data.Linq.Table<KHO> KHOs
		{
			get
			{
				return this.GetTable<KHO>();
			}
		}
		
		public System.Data.Linq.Table<KIEMKE> KIEMKEs
		{
			get
			{
				return this.GetTable<KIEMKE>();
			}
		}
		
		public System.Data.Linq.Table<NHANSU> NHANSUs
		{
			get
			{
				return this.GetTable<NHANSU>();
			}
		}
		
		public System.Data.Linq.Table<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this.GetTable<NHAPKHO>();
			}
		}
		
		public System.Data.Linq.Table<PROVIDER> PROVIDERs
		{
			get
			{
				return this.GetTable<PROVIDER>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<XUATKHO> XUATKHOs
		{
			get
			{
				return this.GetTable<XUATKHO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOPHAN")]
	public partial class BOPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idbophan;
		
		private string _tenbophan;
		
		private string _congviecbophan;
		
		private int _idnhansu;
		
		private EntityRef<NHANSU> _NHANSU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidbophanChanging(string value);
    partial void OnidbophanChanged();
    partial void OntenbophanChanging(string value);
    partial void OntenbophanChanged();
    partial void OncongviecbophanChanging(string value);
    partial void OncongviecbophanChanged();
    partial void OnidnhansuChanging(int value);
    partial void OnidnhansuChanged();
    #endregion
		
		public BOPHAN()
		{
			this._NHANSU = default(EntityRef<NHANSU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idbophan", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idbophan
		{
			get
			{
				return this._idbophan;
			}
			set
			{
				if ((this._idbophan != value))
				{
					this.OnidbophanChanging(value);
					this.SendPropertyChanging();
					this._idbophan = value;
					this.SendPropertyChanged("idbophan");
					this.OnidbophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenbophan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenbophan
		{
			get
			{
				return this._tenbophan;
			}
			set
			{
				if ((this._tenbophan != value))
				{
					this.OntenbophanChanging(value);
					this.SendPropertyChanging();
					this._tenbophan = value;
					this.SendPropertyChanged("tenbophan");
					this.OntenbophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_congviecbophan", DbType="NVarChar(50)")]
		public string congviecbophan
		{
			get
			{
				return this._congviecbophan;
			}
			set
			{
				if ((this._congviecbophan != value))
				{
					this.OncongviecbophanChanging(value);
					this.SendPropertyChanging();
					this._congviecbophan = value;
					this.SendPropertyChanged("congviecbophan");
					this.OncongviecbophanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhansu", DbType="Int NOT NULL")]
		public int idnhansu
		{
			get
			{
				return this._idnhansu;
			}
			set
			{
				if ((this._idnhansu != value))
				{
					if (this._NHANSU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhansuChanging(value);
					this.SendPropertyChanging();
					this._idnhansu = value;
					this.SendPropertyChanged("idnhansu");
					this.OnidnhansuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANSU_BOPHAN", Storage="_NHANSU", ThisKey="idnhansu", OtherKey="idnhansu", IsForeignKey=true)]
		public NHANSU NHANSU
		{
			get
			{
				return this._NHANSU.Entity;
			}
			set
			{
				NHANSU previousValue = this._NHANSU.Entity;
				if (((previousValue != value) 
							|| (this._NHANSU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANSU.Entity = null;
						previousValue.BOPHANs.Remove(this);
					}
					this._NHANSU.Entity = value;
					if ((value != null))
					{
						value.BOPHANs.Add(this);
						this._idnhansu = value.idnhansu;
					}
					else
					{
						this._idnhansu = default(int);
					}
					this.SendPropertyChanged("NHANSU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHO")]
	public partial class KHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idkho;
		
		private string _tenkho;
		
		private string _vitrikho;
		
		private EntitySet<NHAPKHO> _NHAPKHOs;
		
		private EntitySet<XUATKHO> _XUATKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidkhoChanging(string value);
    partial void OnidkhoChanged();
    partial void OntenkhoChanging(string value);
    partial void OntenkhoChanged();
    partial void OnvitrikhoChanging(string value);
    partial void OnvitrikhoChanged();
    #endregion
		
		public KHO()
		{
			this._NHAPKHOs = new EntitySet<NHAPKHO>(new Action<NHAPKHO>(this.attach_NHAPKHOs), new Action<NHAPKHO>(this.detach_NHAPKHOs));
			this._XUATKHOs = new EntitySet<XUATKHO>(new Action<XUATKHO>(this.attach_XUATKHOs), new Action<XUATKHO>(this.detach_XUATKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idkho", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idkho
		{
			get
			{
				return this._idkho;
			}
			set
			{
				if ((this._idkho != value))
				{
					this.OnidkhoChanging(value);
					this.SendPropertyChanging();
					this._idkho = value;
					this.SendPropertyChanged("idkho");
					this.OnidkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkho", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenkho
		{
			get
			{
				return this._tenkho;
			}
			set
			{
				if ((this._tenkho != value))
				{
					this.OntenkhoChanging(value);
					this.SendPropertyChanging();
					this._tenkho = value;
					this.SendPropertyChanged("tenkho");
					this.OntenkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vitrikho", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string vitrikho
		{
			get
			{
				return this._vitrikho;
			}
			set
			{
				if ((this._vitrikho != value))
				{
					this.OnvitrikhoChanging(value);
					this.SendPropertyChanging();
					this._vitrikho = value;
					this.SendPropertyChanged("vitrikho");
					this.OnvitrikhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_NHAPKHO", Storage="_NHAPKHOs", ThisKey="idkho", OtherKey="idkho")]
		public EntitySet<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this._NHAPKHOs;
			}
			set
			{
				this._NHAPKHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_XUATKHO", Storage="_XUATKHOs", ThisKey="idkho", OtherKey="idkho")]
		public EntitySet<XUATKHO> XUATKHOs
		{
			get
			{
				return this._XUATKHOs;
			}
			set
			{
				this._XUATKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = this;
		}
		
		private void detach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = null;
		}
		
		private void attach_XUATKHOs(XUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = this;
		}
		
		private void detach_XUATKHOs(XUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KIEMKE")]
	public partial class KIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idphieukiemke;
		
		private System.DateTime _ngaykiemke;
		
		private int _soluongtonkho;
		
		private string _idsanpham;
		
		private System.Nullable<int> _idnhansu;
		
		private EntityRef<NHANSU> _NHANSU;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidphieukiemkeChanging(string value);
    partial void OnidphieukiemkeChanged();
    partial void OnngaykiemkeChanging(System.DateTime value);
    partial void OnngaykiemkeChanged();
    partial void OnsoluongtonkhoChanging(int value);
    partial void OnsoluongtonkhoChanged();
    partial void OnidsanphamChanging(string value);
    partial void OnidsanphamChanged();
    partial void OnidnhansuChanging(System.Nullable<int> value);
    partial void OnidnhansuChanged();
    #endregion
		
		public KIEMKE()
		{
			this._NHANSU = default(EntityRef<NHANSU>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idphieukiemke", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idphieukiemke
		{
			get
			{
				return this._idphieukiemke;
			}
			set
			{
				if ((this._idphieukiemke != value))
				{
					this.OnidphieukiemkeChanging(value);
					this.SendPropertyChanging();
					this._idphieukiemke = value;
					this.SendPropertyChanged("idphieukiemke");
					this.OnidphieukiemkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaykiemke", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ngaykiemke
		{
			get
			{
				return this._ngaykiemke;
			}
			set
			{
				if ((this._ngaykiemke != value))
				{
					this.OnngaykiemkeChanging(value);
					this.SendPropertyChanging();
					this._ngaykiemke = value;
					this.SendPropertyChanged("ngaykiemke");
					this.OnngaykiemkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluongtonkho", DbType="Int NOT NULL")]
		public int soluongtonkho
		{
			get
			{
				return this._soluongtonkho;
			}
			set
			{
				if ((this._soluongtonkho != value))
				{
					this.OnsoluongtonkhoChanging(value);
					this.SendPropertyChanging();
					this._soluongtonkho = value;
					this.SendPropertyChanged("soluongtonkho");
					this.OnsoluongtonkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="NVarChar(50)")]
		public string idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhansu", DbType="Int")]
		public System.Nullable<int> idnhansu
		{
			get
			{
				return this._idnhansu;
			}
			set
			{
				if ((this._idnhansu != value))
				{
					if (this._NHANSU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhansuChanging(value);
					this.SendPropertyChanging();
					this._idnhansu = value;
					this.SendPropertyChanged("idnhansu");
					this.OnidnhansuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANSU_KIEMKE", Storage="_NHANSU", ThisKey="idnhansu", OtherKey="idnhansu", IsForeignKey=true)]
		public NHANSU NHANSU
		{
			get
			{
				return this._NHANSU.Entity;
			}
			set
			{
				NHANSU previousValue = this._NHANSU.Entity;
				if (((previousValue != value) 
							|| (this._NHANSU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANSU.Entity = null;
						previousValue.KIEMKEs.Remove(this);
					}
					this._NHANSU.Entity = value;
					if ((value != null))
					{
						value.KIEMKEs.Add(this);
						this._idnhansu = value.idnhansu;
					}
					else
					{
						this._idnhansu = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANSU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KIEMKE", Storage="_SANPHAM", ThisKey="idsanpham", OtherKey="idsanpham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.KIEMKEs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.KIEMKEs.Add(this);
						this._idsanpham = value.idsanpham;
					}
					else
					{
						this._idsanpham = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANSU")]
	public partial class NHANSU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idnhansu;
		
		private string _tennhansu;
		
		private string _chucvu;
		
		private bool _gioitinh;
		
		private string _diachi;
		
		private string _dienthoai;
		
		private string _email;
		
		private System.DateTime _ngayvaolam;
		
		private EntitySet<BOPHAN> _BOPHANs;
		
		private EntitySet<KIEMKE> _KIEMKEs;
		
		private EntitySet<NHAPKHO> _NHAPKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidnhansuChanging(int value);
    partial void OnidnhansuChanged();
    partial void OntennhansuChanging(string value);
    partial void OntennhansuChanged();
    partial void OnchucvuChanging(string value);
    partial void OnchucvuChanged();
    partial void OngioitinhChanging(bool value);
    partial void OngioitinhChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OndienthoaiChanging(string value);
    partial void OndienthoaiChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnngayvaolamChanging(System.DateTime value);
    partial void OnngayvaolamChanged();
    #endregion
		
		public NHANSU()
		{
			this._BOPHANs = new EntitySet<BOPHAN>(new Action<BOPHAN>(this.attach_BOPHANs), new Action<BOPHAN>(this.detach_BOPHANs));
			this._KIEMKEs = new EntitySet<KIEMKE>(new Action<KIEMKE>(this.attach_KIEMKEs), new Action<KIEMKE>(this.detach_KIEMKEs));
			this._NHAPKHOs = new EntitySet<NHAPKHO>(new Action<NHAPKHO>(this.attach_NHAPKHOs), new Action<NHAPKHO>(this.detach_NHAPKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhansu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idnhansu
		{
			get
			{
				return this._idnhansu;
			}
			set
			{
				if ((this._idnhansu != value))
				{
					this.OnidnhansuChanging(value);
					this.SendPropertyChanging();
					this._idnhansu = value;
					this.SendPropertyChanged("idnhansu");
					this.OnidnhansuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tennhansu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tennhansu
		{
			get
			{
				return this._tennhansu;
			}
			set
			{
				if ((this._tennhansu != value))
				{
					this.OntennhansuChanging(value);
					this.SendPropertyChanging();
					this._tennhansu = value;
					this.SendPropertyChanged("tennhansu");
					this.OntennhansuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chucvu", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string chucvu
		{
			get
			{
				return this._chucvu;
			}
			set
			{
				if ((this._chucvu != value))
				{
					this.OnchucvuChanging(value);
					this.SendPropertyChanging();
					this._chucvu = value;
					this.SendPropertyChanged("chucvu");
					this.OnchucvuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="Bit NOT NULL")]
		public bool gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienthoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string dienthoai
		{
			get
			{
				return this._dienthoai;
			}
			set
			{
				if ((this._dienthoai != value))
				{
					this.OndienthoaiChanging(value);
					this.SendPropertyChanging();
					this._dienthoai = value;
					this.SendPropertyChanged("dienthoai");
					this.OndienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayvaolam", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ngayvaolam
		{
			get
			{
				return this._ngayvaolam;
			}
			set
			{
				if ((this._ngayvaolam != value))
				{
					this.OnngayvaolamChanging(value);
					this.SendPropertyChanging();
					this._ngayvaolam = value;
					this.SendPropertyChanged("ngayvaolam");
					this.OnngayvaolamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANSU_BOPHAN", Storage="_BOPHANs", ThisKey="idnhansu", OtherKey="idnhansu")]
		public EntitySet<BOPHAN> BOPHANs
		{
			get
			{
				return this._BOPHANs;
			}
			set
			{
				this._BOPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANSU_KIEMKE", Storage="_KIEMKEs", ThisKey="idnhansu", OtherKey="idnhansu")]
		public EntitySet<KIEMKE> KIEMKEs
		{
			get
			{
				return this._KIEMKEs;
			}
			set
			{
				this._KIEMKEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANSU_NHAPKHO", Storage="_NHAPKHOs", ThisKey="idnhansu", OtherKey="idnhansu")]
		public EntitySet<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this._NHAPKHOs;
			}
			set
			{
				this._NHAPKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOPHANs(BOPHAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANSU = this;
		}
		
		private void detach_BOPHANs(BOPHAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANSU = null;
		}
		
		private void attach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.NHANSU = this;
		}
		
		private void detach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.NHANSU = null;
		}
		
		private void attach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.NHANSU = this;
		}
		
		private void detach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.NHANSU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAPKHO")]
	public partial class NHAPKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idphieunhap;
		
		private System.DateTime _ngaynhapkho;
		
		private int _soluongnhap;
		
		private string _idsanpham;
		
		private System.Nullable<int> _idnhansu;
		
		private System.Nullable<int> _idnhacungcap;
		
		private string _idkho;
		
		private EntityRef<NHANSU> _NHANSU;
		
		private EntityRef<KHO> _KHO;
		
		private EntityRef<PROVIDER> _PROVIDER;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidphieunhapChanging(string value);
    partial void OnidphieunhapChanged();
    partial void OnngaynhapkhoChanging(System.DateTime value);
    partial void OnngaynhapkhoChanged();
    partial void OnsoluongnhapChanging(int value);
    partial void OnsoluongnhapChanged();
    partial void OnidsanphamChanging(string value);
    partial void OnidsanphamChanged();
    partial void OnidnhansuChanging(System.Nullable<int> value);
    partial void OnidnhansuChanged();
    partial void OnidnhacungcapChanging(System.Nullable<int> value);
    partial void OnidnhacungcapChanged();
    partial void OnidkhoChanging(string value);
    partial void OnidkhoChanged();
    #endregion
		
		public NHAPKHO()
		{
			this._NHANSU = default(EntityRef<NHANSU>);
			this._KHO = default(EntityRef<KHO>);
			this._PROVIDER = default(EntityRef<PROVIDER>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idphieunhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idphieunhap
		{
			get
			{
				return this._idphieunhap;
			}
			set
			{
				if ((this._idphieunhap != value))
				{
					this.OnidphieunhapChanging(value);
					this.SendPropertyChanging();
					this._idphieunhap = value;
					this.SendPropertyChanged("idphieunhap");
					this.OnidphieunhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaynhapkho", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ngaynhapkho
		{
			get
			{
				return this._ngaynhapkho;
			}
			set
			{
				if ((this._ngaynhapkho != value))
				{
					this.OnngaynhapkhoChanging(value);
					this.SendPropertyChanging();
					this._ngaynhapkho = value;
					this.SendPropertyChanged("ngaynhapkho");
					this.OnngaynhapkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluongnhap", DbType="Int NOT NULL")]
		public int soluongnhap
		{
			get
			{
				return this._soluongnhap;
			}
			set
			{
				if ((this._soluongnhap != value))
				{
					this.OnsoluongnhapChanging(value);
					this.SendPropertyChanging();
					this._soluongnhap = value;
					this.SendPropertyChanged("soluongnhap");
					this.OnsoluongnhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="NVarChar(50)")]
		public string idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhansu", DbType="Int")]
		public System.Nullable<int> idnhansu
		{
			get
			{
				return this._idnhansu;
			}
			set
			{
				if ((this._idnhansu != value))
				{
					if (this._NHANSU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhansuChanging(value);
					this.SendPropertyChanging();
					this._idnhansu = value;
					this.SendPropertyChanged("idnhansu");
					this.OnidnhansuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhacungcap", DbType="Int")]
		public System.Nullable<int> idnhacungcap
		{
			get
			{
				return this._idnhacungcap;
			}
			set
			{
				if ((this._idnhacungcap != value))
				{
					if (this._PROVIDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidnhacungcapChanging(value);
					this.SendPropertyChanging();
					this._idnhacungcap = value;
					this.SendPropertyChanged("idnhacungcap");
					this.OnidnhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idkho", DbType="NVarChar(50)")]
		public string idkho
		{
			get
			{
				return this._idkho;
			}
			set
			{
				if ((this._idkho != value))
				{
					if (this._KHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidkhoChanging(value);
					this.SendPropertyChanging();
					this._idkho = value;
					this.SendPropertyChanged("idkho");
					this.OnidkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANSU_NHAPKHO", Storage="_NHANSU", ThisKey="idnhansu", OtherKey="idnhansu", IsForeignKey=true)]
		public NHANSU NHANSU
		{
			get
			{
				return this._NHANSU.Entity;
			}
			set
			{
				NHANSU previousValue = this._NHANSU.Entity;
				if (((previousValue != value) 
							|| (this._NHANSU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANSU.Entity = null;
						previousValue.NHAPKHOs.Remove(this);
					}
					this._NHANSU.Entity = value;
					if ((value != null))
					{
						value.NHAPKHOs.Add(this);
						this._idnhansu = value.idnhansu;
					}
					else
					{
						this._idnhansu = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANSU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_NHAPKHO", Storage="_KHO", ThisKey="idkho", OtherKey="idkho", IsForeignKey=true)]
		public KHO KHO
		{
			get
			{
				return this._KHO.Entity;
			}
			set
			{
				KHO previousValue = this._KHO.Entity;
				if (((previousValue != value) 
							|| (this._KHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO.Entity = null;
						previousValue.NHAPKHOs.Remove(this);
					}
					this._KHO.Entity = value;
					if ((value != null))
					{
						value.NHAPKHOs.Add(this);
						this._idkho = value.idkho;
					}
					else
					{
						this._idkho = default(string);
					}
					this.SendPropertyChanged("KHO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROVIDER_NHAPKHO", Storage="_PROVIDER", ThisKey="idnhacungcap", OtherKey="idnhacungcap", IsForeignKey=true)]
		public PROVIDER PROVIDER
		{
			get
			{
				return this._PROVIDER.Entity;
			}
			set
			{
				PROVIDER previousValue = this._PROVIDER.Entity;
				if (((previousValue != value) 
							|| (this._PROVIDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROVIDER.Entity = null;
						previousValue.NHAPKHOs.Remove(this);
					}
					this._PROVIDER.Entity = value;
					if ((value != null))
					{
						value.NHAPKHOs.Add(this);
						this._idnhacungcap = value.idnhacungcap;
					}
					else
					{
						this._idnhacungcap = default(Nullable<int>);
					}
					this.SendPropertyChanged("PROVIDER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NHAPKHO", Storage="_SANPHAM", ThisKey="idsanpham", OtherKey="idsanpham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.NHAPKHOs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.NHAPKHOs.Add(this);
						this._idsanpham = value.idsanpham;
					}
					else
					{
						this._idsanpham = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROVIDER")]
	public partial class PROVIDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idnhacungcap;
		
		private string _tennhacungcap;
		
		private string _diachinhacungcap;
		
		private string _sdtnhacungcap;
		
		private EntitySet<NHAPKHO> _NHAPKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidnhacungcapChanging(int value);
    partial void OnidnhacungcapChanged();
    partial void OntennhacungcapChanging(string value);
    partial void OntennhacungcapChanged();
    partial void OndiachinhacungcapChanging(string value);
    partial void OndiachinhacungcapChanged();
    partial void OnsdtnhacungcapChanging(string value);
    partial void OnsdtnhacungcapChanged();
    #endregion
		
		public PROVIDER()
		{
			this._NHAPKHOs = new EntitySet<NHAPKHO>(new Action<NHAPKHO>(this.attach_NHAPKHOs), new Action<NHAPKHO>(this.detach_NHAPKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhacungcap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idnhacungcap
		{
			get
			{
				return this._idnhacungcap;
			}
			set
			{
				if ((this._idnhacungcap != value))
				{
					this.OnidnhacungcapChanging(value);
					this.SendPropertyChanging();
					this._idnhacungcap = value;
					this.SendPropertyChanged("idnhacungcap");
					this.OnidnhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tennhacungcap", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string tennhacungcap
		{
			get
			{
				return this._tennhacungcap;
			}
			set
			{
				if ((this._tennhacungcap != value))
				{
					this.OntennhacungcapChanging(value);
					this.SendPropertyChanging();
					this._tennhacungcap = value;
					this.SendPropertyChanged("tennhacungcap");
					this.OntennhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachinhacungcap", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diachinhacungcap
		{
			get
			{
				return this._diachinhacungcap;
			}
			set
			{
				if ((this._diachinhacungcap != value))
				{
					this.OndiachinhacungcapChanging(value);
					this.SendPropertyChanging();
					this._diachinhacungcap = value;
					this.SendPropertyChanged("diachinhacungcap");
					this.OndiachinhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdtnhacungcap", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string sdtnhacungcap
		{
			get
			{
				return this._sdtnhacungcap;
			}
			set
			{
				if ((this._sdtnhacungcap != value))
				{
					this.OnsdtnhacungcapChanging(value);
					this.SendPropertyChanging();
					this._sdtnhacungcap = value;
					this.SendPropertyChanged("sdtnhacungcap");
					this.OnsdtnhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROVIDER_NHAPKHO", Storage="_NHAPKHOs", ThisKey="idnhacungcap", OtherKey="idnhacungcap")]
		public EntitySet<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this._NHAPKHOs;
			}
			set
			{
				this._NHAPKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.PROVIDER = this;
		}
		
		private void detach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.PROVIDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idsanpham;
		
		private string _tensanpham;
		
		private string _donvi;
		
		private string _loaisanpham;
		
		private string _nhomsanpham;
		
		private int _dongia;
		
		private string _nhacungcap;
		
		private EntitySet<KIEMKE> _KIEMKEs;
		
		private EntitySet<NHAPKHO> _NHAPKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidsanphamChanging(string value);
    partial void OnidsanphamChanged();
    partial void OntensanphamChanging(string value);
    partial void OntensanphamChanged();
    partial void OndonviChanging(string value);
    partial void OndonviChanged();
    partial void OnloaisanphamChanging(string value);
    partial void OnloaisanphamChanged();
    partial void OnnhomsanphamChanging(string value);
    partial void OnnhomsanphamChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    partial void OnnhacungcapChanging(string value);
    partial void OnnhacungcapChanged();
    #endregion
		
		public SANPHAM()
		{
			this._KIEMKEs = new EntitySet<KIEMKE>(new Action<KIEMKE>(this.attach_KIEMKEs), new Action<KIEMKE>(this.detach_KIEMKEs));
			this._NHAPKHOs = new EntitySet<NHAPKHO>(new Action<NHAPKHO>(this.attach_NHAPKHOs), new Action<NHAPKHO>(this.detach_NHAPKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensanpham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tensanpham
		{
			get
			{
				return this._tensanpham;
			}
			set
			{
				if ((this._tensanpham != value))
				{
					this.OntensanphamChanging(value);
					this.SendPropertyChanging();
					this._tensanpham = value;
					this.SendPropertyChanged("tensanpham");
					this.OntensanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donvi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string donvi
		{
			get
			{
				return this._donvi;
			}
			set
			{
				if ((this._donvi != value))
				{
					this.OndonviChanging(value);
					this.SendPropertyChanging();
					this._donvi = value;
					this.SendPropertyChanged("donvi");
					this.OndonviChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaisanpham", DbType="NVarChar(50)")]
		public string loaisanpham
		{
			get
			{
				return this._loaisanpham;
			}
			set
			{
				if ((this._loaisanpham != value))
				{
					this.OnloaisanphamChanging(value);
					this.SendPropertyChanging();
					this._loaisanpham = value;
					this.SendPropertyChanged("loaisanpham");
					this.OnloaisanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nhomsanpham", DbType="NVarChar(50)")]
		public string nhomsanpham
		{
			get
			{
				return this._nhomsanpham;
			}
			set
			{
				if ((this._nhomsanpham != value))
				{
					this.OnnhomsanphamChanging(value);
					this.SendPropertyChanging();
					this._nhomsanpham = value;
					this.SendPropertyChanged("nhomsanpham");
					this.OnnhomsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nhacungcap", DbType="NVarChar(100)")]
		public string nhacungcap
		{
			get
			{
				return this._nhacungcap;
			}
			set
			{
				if ((this._nhacungcap != value))
				{
					this.OnnhacungcapChanging(value);
					this.SendPropertyChanging();
					this._nhacungcap = value;
					this.SendPropertyChanged("nhacungcap");
					this.OnnhacungcapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KIEMKE", Storage="_KIEMKEs", ThisKey="idsanpham", OtherKey="idsanpham")]
		public EntitySet<KIEMKE> KIEMKEs
		{
			get
			{
				return this._KIEMKEs;
			}
			set
			{
				this._KIEMKEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_NHAPKHO", Storage="_NHAPKHOs", ThisKey="idsanpham", OtherKey="idsanpham")]
		public EntitySet<NHAPKHO> NHAPKHOs
		{
			get
			{
				return this._NHAPKHOs;
			}
			set
			{
				this._NHAPKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_KIEMKEs(KIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_NHAPKHOs(NHAPKHO entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XUATKHO")]
	public partial class XUATKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idphieuxuat;
		
		private System.DateTime _ngayxuatkho;
		
		private int _soluongxuat;
		
		private string _idsanpham;
		
		private string _idkho;
		
		private string _idnhansu;
		
		private EntityRef<KHO> _KHO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidphieuxuatChanging(string value);
    partial void OnidphieuxuatChanged();
    partial void OnngayxuatkhoChanging(System.DateTime value);
    partial void OnngayxuatkhoChanged();
    partial void OnsoluongxuatChanging(int value);
    partial void OnsoluongxuatChanged();
    partial void OnidsanphamChanging(string value);
    partial void OnidsanphamChanged();
    partial void OnidkhoChanging(string value);
    partial void OnidkhoChanged();
    partial void OnidnhansuChanging(string value);
    partial void OnidnhansuChanged();
    #endregion
		
		public XUATKHO()
		{
			this._KHO = default(EntityRef<KHO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idphieuxuat", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idphieuxuat
		{
			get
			{
				return this._idphieuxuat;
			}
			set
			{
				if ((this._idphieuxuat != value))
				{
					this.OnidphieuxuatChanging(value);
					this.SendPropertyChanging();
					this._idphieuxuat = value;
					this.SendPropertyChanged("idphieuxuat");
					this.OnidphieuxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayxuatkho", DbType="SmallDateTime NOT NULL")]
		public System.DateTime ngayxuatkho
		{
			get
			{
				return this._ngayxuatkho;
			}
			set
			{
				if ((this._ngayxuatkho != value))
				{
					this.OnngayxuatkhoChanging(value);
					this.SendPropertyChanging();
					this._ngayxuatkho = value;
					this.SendPropertyChanged("ngayxuatkho");
					this.OnngayxuatkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluongxuat", DbType="Int NOT NULL")]
		public int soluongxuat
		{
			get
			{
				return this._soluongxuat;
			}
			set
			{
				if ((this._soluongxuat != value))
				{
					this.OnsoluongxuatChanging(value);
					this.SendPropertyChanging();
					this._soluongxuat = value;
					this.SendPropertyChanged("soluongxuat");
					this.OnsoluongxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsanpham", DbType="NVarChar(50)")]
		public string idsanpham
		{
			get
			{
				return this._idsanpham;
			}
			set
			{
				if ((this._idsanpham != value))
				{
					this.OnidsanphamChanging(value);
					this.SendPropertyChanging();
					this._idsanpham = value;
					this.SendPropertyChanged("idsanpham");
					this.OnidsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idkho", DbType="NVarChar(50)")]
		public string idkho
		{
			get
			{
				return this._idkho;
			}
			set
			{
				if ((this._idkho != value))
				{
					if (this._KHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidkhoChanging(value);
					this.SendPropertyChanging();
					this._idkho = value;
					this.SendPropertyChanged("idkho");
					this.OnidkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idnhansu", DbType="NVarChar(50)")]
		public string idnhansu
		{
			get
			{
				return this._idnhansu;
			}
			set
			{
				if ((this._idnhansu != value))
				{
					this.OnidnhansuChanging(value);
					this.SendPropertyChanging();
					this._idnhansu = value;
					this.SendPropertyChanged("idnhansu");
					this.OnidnhansuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_XUATKHO", Storage="_KHO", ThisKey="idkho", OtherKey="idkho", IsForeignKey=true)]
		public KHO KHO
		{
			get
			{
				return this._KHO.Entity;
			}
			set
			{
				KHO previousValue = this._KHO.Entity;
				if (((previousValue != value) 
							|| (this._KHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO.Entity = null;
						previousValue.XUATKHOs.Remove(this);
					}
					this._KHO.Entity = value;
					if ((value != null))
					{
						value.XUATKHOs.Add(this);
						this._idkho = value.idkho;
					}
					else
					{
						this._idkho = default(string);
					}
					this.SendPropertyChanged("KHO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
